
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID STRING_LITERAL INTEGER_LITERAL FLOAT_LITERAL EQ GT LT LTEQ GTEQ NOTEQ LPAREN RPAREN COMMA DOT STAR SEMICOLON AND REAL ALL DROP ROLLBACK NOT INT INTO BEGIN PRIMARY CHAR AS SET WORK KEY TABLE INTEGER NULL SELECT INSERT FROM LIKE DISTINCT VALUES CREATE CLIKE OR VARCHAR WHERE LIMIT COMMIT UPDATE IS DELETEsql_stmt : select_stmt SEMICOLON\n                | insert_stmt SEMICOLON\n                | update_stmt SEMICOLON\n                | delete_stmt SEMICOLON\n                | create_stmt SEMICOLON\n                | drop_stmt SEMICOLON\n                | begin_stmt SEMICOLON\n                | commit_stmt SEMICOLON\n                | rollback_stmt SEMICOLONselect_stmt : SELECT distinct_specified select_list FROM from_list where_clause limitdistinct_specified :\n                            | ALL\n                            | DISTINCTselect_list : select_item\n                    | select_list COMMA select_itemselect_item : column\n                    | column_val\n                    | STARcolumn : ID\n                | table DOT IDcolumn_val : INTEGER_LITERAL\n                  | FLOAT_LITERAL\n                  | STRING_LITERAL\n                  | NULLfrom_list : from_item\n                    | from_list COMMA from_itemfrom_item : table range_variabletable : IDrange_variable :\n                      | ID\n                      | AS IDwhere_clause :\n                        | WHERE conditional_expressionconditional_expression : conditional_term\n                                | conditional_expression OR conditional_termconditional_term : conditional_factor\n                        | conditional_term AND conditional_factorconditional_factor : conditional_primary\n                            | NOT conditional_primaryconditional_primary : comparison\n                            | LPAREN conditional_expression RPARENcomparison : cterm EQ cterm\n                    | cterm NOTEQ cterm\n                    | cterm LT cterm\n                    | cterm GT cterm\n                    | cterm LTEQ cterm\n                    | cterm GTEQ cterm\n                    | cterm LIKE STRING_LITERAL\n                    | cterm CLIKE STRING_LITERAL\n                    | cterm IS NULL\n                    | cterm IS NOT NULLcterm : column\n                | INTEGER_LITERAL\n                | FLOAT_LITERAL\n                | STRING_LITERALlimit :\n                | LIMIT INTEGER_LITERAL\n                | LIMIT INTEGER_LITERAL COMMA INTEGER_LITERALcreate_stmt : CREATE TABLE table LPAREN col_def_list RPARENcol_def_list : col_def\n                    | col_def_list COMMA col_defcol_def : column INTEGER col_def_opts\n                | column CHAR LPAREN INTEGER_LITERAL RPAREN col_def_opts\n                | column VARCHAR LPAREN INTEGER_LITERAL RPAREN col_def_opts\n                | column REAL col_def_optscol_def_opts :\n                    | NOT NULL\n                    | PRIMARY KEY\n                    | NOT NULL PRIMARY KEY\n                    | PRIMARY KEY NOT NULLinsert_stmt : INSERT INTO table insert_col_clause VALUES LPAREN insert_val_list RPARENinsert_col_clause :\n                        | LPAREN insert_col_list RPARENinsert_col_list : column\n                    | insert_col_list COMMA columninsert_val_list : column_val\n                        | insert_val_list COMMA column_valdelete_stmt : DELETE FROM table where_clauseupdate_stmt : UPDATE table SET update_list where_clauseupdate_list : column EQ column_val\n                    | update_list COMMA column EQ column_valdrop_stmt : DROP TABLE tablebegin_stmt : BEGIN WORKcommit_stmt : COMMIT optional_workrollback_stmt : ROLLBACK optional_workoptional_work :\n                    | WORK'
    
_lr_action_items = {'REAL':([51,72,77,],[-19,-20,104,]),'DROP':([0,],[10,]),'STAR':([4,24,25,26,59,],[-11,48,-12,-13,48,]),'GTEQ':([51,72,82,84,88,90,91,],[-19,-20,112,-54,-53,-55,-52,]),'NOTEQ':([51,72,82,84,88,90,91,],[-19,-20,113,-54,-53,-55,-52,]),'CHAR':([51,72,77,],[-19,-20,105,]),'INTEGER_LITERAL':([4,24,25,26,59,67,79,87,93,99,110,112,113,114,116,117,119,121,124,134,136,137,153,160,],[-11,45,-12,-13,45,88,45,88,88,45,88,88,88,88,88,88,88,88,151,156,157,45,45,166,]),'LIMIT':([38,51,68,69,70,72,83,84,85,86,88,89,90,91,92,94,96,98,122,125,126,138,139,140,141,142,143,144,145,147,148,149,150,159,],[-28,-19,-32,-25,-29,-20,-38,-54,-36,-34,-53,-40,-55,-52,-33,124,-27,-30,-39,-26,-31,-45,-48,-47,-43,-46,-49,-44,-42,-50,-37,-41,-35,-51,]),'NULL':([4,24,25,26,59,79,99,118,133,137,146,153,162,],[-11,42,-12,-13,42,42,42,147,155,42,159,42,167,]),'SELECT':([0,],[4,]),'INSERT':([0,],[6,]),'BEGIN':([0,],[7,]),'SET':([37,38,],[56,-28,]),'RPAREN':([42,43,45,51,52,72,74,75,76,78,83,84,85,86,88,89,90,91,104,106,120,122,127,128,129,130,131,135,138,139,140,141,142,143,144,145,147,148,149,150,154,155,156,157,159,161,164,165,167,168,169,170,],[-24,-22,-21,-19,-23,-20,101,-74,102,-60,-38,-54,-36,-34,-53,-40,-55,-52,-66,-66,149,-39,-76,152,-75,-61,-65,-62,-45,-48,-47,-43,-46,-49,-44,-42,-50,-37,-41,-35,-68,-67,164,165,-51,-77,-66,-66,-70,-69,-63,-64,]),'SEMICOLON':([1,2,3,5,8,11,12,14,15,17,18,21,22,29,36,38,42,43,45,51,52,55,57,65,66,68,69,70,72,80,83,84,85,86,88,89,90,91,92,94,96,98,102,108,122,123,125,126,138,139,140,141,142,143,144,145,147,148,149,150,151,152,158,159,166,],[20,-86,23,27,30,33,34,35,-86,39,40,-87,-84,-83,-85,-28,-24,-22,-21,-19,-23,-82,-32,-32,-78,-32,-25,-29,-20,-79,-38,-54,-36,-34,-53,-40,-55,-52,-33,-56,-27,-30,-59,-80,-39,-10,-26,-31,-45,-48,-47,-43,-46,-49,-44,-42,-50,-37,-41,-35,-57,-71,-81,-51,-58,]),'DISTINCT':([4,],[26,]),'EQ':([51,64,72,82,84,88,90,91,109,],[-19,79,-20,117,-54,-53,-55,-52,137,]),'CREATE':([0,],[9,]),'WORK':([2,7,15,],[21,29,21,]),'FLOAT_LITERAL':([4,24,25,26,59,67,79,87,93,99,110,112,113,114,116,117,119,121,137,153,],[-11,43,-12,-13,43,84,43,84,84,43,84,84,84,84,84,84,84,84,43,43,]),'LT':([51,72,82,84,88,90,91,],[-19,-20,116,-54,-53,-55,-52,]),'COMMA':([38,42,43,44,45,46,47,48,50,51,52,65,68,69,70,71,72,74,75,76,78,96,98,104,106,108,125,126,127,128,129,130,131,135,151,154,155,158,161,164,165,167,168,169,170,],[-28,-24,-22,-16,-21,59,-17,-18,-14,-19,-23,81,95,-25,-29,-15,-20,100,-74,103,-60,-27,-30,-66,-66,-80,-26,-31,-76,153,-75,-61,-65,-62,160,-68,-67,-81,-77,-66,-66,-70,-69,-63,-64,]),'DOT':([49,51,],[60,-28,]),'TABLE':([9,10,],[31,32,]),'IS':([51,72,82,84,88,90,91,],[-19,-20,118,-54,-53,-55,-52,]),'$end':([13,20,23,27,30,33,34,35,39,40,],[0,-9,-8,-3,-6,-5,-1,-2,-7,-4,]),'GT':([51,72,82,84,88,90,91,],[-19,-20,110,-54,-53,-55,-52,]),'ROLLBACK':([0,],[15,]),'INTO':([6,],[28,]),'CLIKE':([51,72,82,84,88,90,91,],[-19,-20,115,-54,-53,-55,-52,]),'UPDATE':([0,],[16,]),'AS':([38,70,],[-28,97,]),'LPAREN':([38,53,54,67,73,87,93,105,107,119,121,],[-28,62,63,87,99,87,87,134,136,87,87,]),'COMMIT':([0,],[2,]),'VARCHAR':([51,72,77,],[-19,-20,107,]),'WHERE':([38,42,43,45,52,57,65,68,69,70,96,98,108,125,126,158,],[-28,-24,-22,-21,-23,67,67,67,-25,-29,-27,-30,-80,-26,-31,-81,]),'ID':([4,16,24,25,26,28,31,32,38,41,56,58,59,60,62,63,67,70,81,87,93,95,97,100,103,110,112,113,114,116,117,119,121,],[-11,38,51,-12,-13,38,38,38,-28,38,51,38,51,72,51,51,51,98,51,51,51,38,126,51,51,51,51,51,51,51,51,51,51,]),'LIKE':([51,72,82,84,88,90,91,],[-19,-20,111,-54,-53,-55,-52,]),'AND':([51,72,83,84,85,86,88,89,90,91,122,138,139,140,141,142,143,144,145,147,148,149,150,159,],[-19,-20,-38,-54,-36,119,-53,-40,-55,-52,-39,-45,-48,-47,-43,-46,-49,-44,-42,-50,-37,-41,119,-51,]),'ALL':([4,],[25,]),'FROM':([19,42,43,44,45,46,47,48,50,51,52,71,72,],[41,-24,-22,-16,-21,58,-17,-18,-14,-19,-23,-15,-20,]),'STRING_LITERAL':([4,24,25,26,59,67,79,87,93,99,110,111,112,113,114,115,116,117,119,121,137,153,],[-11,52,-12,-13,52,90,52,90,90,52,90,139,90,90,90,143,90,90,90,90,52,52,]),'INTEGER':([51,72,77,],[-19,-20,106,]),'LTEQ':([51,72,82,84,88,90,91,],[-19,-20,114,-54,-53,-55,-52,]),'PRIMARY':([104,106,155,164,165,],[132,132,163,132,132,]),'VALUES':([38,53,61,101,],[-28,-72,73,-73,]),'KEY':([132,163,],[154,168,]),'NOT':([67,87,104,106,118,119,121,154,164,165,],[93,93,133,133,146,93,93,162,133,133,]),'OR':([51,72,83,84,85,86,88,89,90,91,92,120,122,138,139,140,141,142,143,144,145,147,148,149,150,159,],[-19,-20,-38,-54,-36,-34,-53,-40,-55,-52,121,121,-39,-45,-48,-47,-43,-46,-49,-44,-42,-50,-37,-41,-35,-51,]),'DELETE':([0,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'range_variable':([70,],[96,]),'distinct_specified':([4,],[24,]),'cterm':([67,87,93,110,112,113,114,116,117,119,121,],[82,82,82,138,140,141,142,144,145,82,82,]),'col_def_list':([63,],[76,]),'where_clause':([57,65,68,],[66,80,94,]),'rollback_stmt':([0,],[1,]),'from_list':([58,],[68,]),'insert_val_list':([99,],[128,]),'from_item':([58,95,],[69,125,]),'table':([16,24,28,31,32,41,56,58,59,62,63,67,81,87,93,95,100,103,110,112,113,114,116,117,119,121,],[37,49,53,54,55,57,49,70,49,49,49,49,49,49,49,70,49,49,49,49,49,49,49,49,49,49,]),'commit_stmt':([0,],[3,]),'update_stmt':([0,],[5,]),'col_def_opts':([104,106,164,165,],[131,135,169,170,]),'conditional_primary':([67,87,93,119,121,],[83,83,122,83,83,]),'drop_stmt':([0,],[8,]),'col_def':([63,103,],[78,130,]),'create_stmt':([0,],[11,]),'select_stmt':([0,],[12,]),'sql_stmt':([0,],[13,]),'conditional_factor':([67,87,119,121,],[85,85,148,85,]),'insert_stmt':([0,],[14,]),'conditional_term':([67,87,121,],[86,86,150,]),'comparison':([67,87,93,119,121,],[89,89,89,89,89,]),'column_val':([24,59,79,99,137,153,],[47,47,108,127,158,161,]),'insert_col_clause':([53,],[61,]),'optional_work':([2,15,],[22,36,]),'begin_stmt':([0,],[17,]),'column':([24,56,59,62,63,67,81,87,93,100,103,110,112,113,114,116,117,119,121,],[44,64,44,75,77,91,109,91,91,129,77,91,91,91,91,91,91,91,91,]),'update_list':([56,],[65,]),'delete_stmt':([0,],[18,]),'select_list':([24,],[46,]),'insert_col_list':([62,],[74,]),'limit':([94,],[123,]),'conditional_expression':([67,87,],[92,120,]),'select_item':([24,59,],[50,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sql_stmt","S'",1,None,None,None),
  ('sql_stmt -> select_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',28),
  ('sql_stmt -> insert_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',29),
  ('sql_stmt -> update_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',30),
  ('sql_stmt -> delete_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',31),
  ('sql_stmt -> create_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',32),
  ('sql_stmt -> drop_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',33),
  ('sql_stmt -> begin_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',34),
  ('sql_stmt -> commit_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',35),
  ('sql_stmt -> rollback_stmt SEMICOLON','sql_stmt',2,'p_sql_stmt','dbms_parser.py',36),
  ('select_stmt -> SELECT distinct_specified select_list FROM from_list where_clause limit','select_stmt',7,'p_select_stmt','dbms_parser.py',41),
  ('distinct_specified -> <empty>','distinct_specified',0,'p_distinct_specified','dbms_parser.py',46),
  ('distinct_specified -> ALL','distinct_specified',1,'p_distinct_specified','dbms_parser.py',47),
  ('distinct_specified -> DISTINCT','distinct_specified',1,'p_distinct_specified','dbms_parser.py',48),
  ('select_list -> select_item','select_list',1,'p_select_list','dbms_parser.py',59),
  ('select_list -> select_list COMMA select_item','select_list',3,'p_select_list','dbms_parser.py',60),
  ('select_item -> column','select_item',1,'p_select_item','dbms_parser.py',68),
  ('select_item -> column_val','select_item',1,'p_select_item','dbms_parser.py',69),
  ('select_item -> STAR','select_item',1,'p_select_item','dbms_parser.py',70),
  ('column -> ID','column',1,'p_column','dbms_parser.py',78),
  ('column -> table DOT ID','column',3,'p_column','dbms_parser.py',79),
  ('column_val -> INTEGER_LITERAL','column_val',1,'p_column_val','dbms_parser.py',87),
  ('column_val -> FLOAT_LITERAL','column_val',1,'p_column_val','dbms_parser.py',88),
  ('column_val -> STRING_LITERAL','column_val',1,'p_column_val','dbms_parser.py',89),
  ('column_val -> NULL','column_val',1,'p_column_val','dbms_parser.py',90),
  ('from_list -> from_item','from_list',1,'p_from_list','dbms_parser.py',98),
  ('from_list -> from_list COMMA from_item','from_list',3,'p_from_list','dbms_parser.py',99),
  ('from_item -> table range_variable','from_item',2,'p_from_item','dbms_parser.py',107),
  ('table -> ID','table',1,'p_table','dbms_parser.py',114),
  ('range_variable -> <empty>','range_variable',0,'p_range_variable','dbms_parser.py',119),
  ('range_variable -> ID','range_variable',1,'p_range_variable','dbms_parser.py',120),
  ('range_variable -> AS ID','range_variable',2,'p_range_variable','dbms_parser.py',121),
  ('where_clause -> <empty>','where_clause',0,'p_where_clause','dbms_parser.py',129),
  ('where_clause -> WHERE conditional_expression','where_clause',2,'p_where_clause','dbms_parser.py',130),
  ('conditional_expression -> conditional_term','conditional_expression',1,'p_conditional_expression','dbms_parser.py',138),
  ('conditional_expression -> conditional_expression OR conditional_term','conditional_expression',3,'p_conditional_expression','dbms_parser.py',139),
  ('conditional_term -> conditional_factor','conditional_term',1,'p_conditional_term','dbms_parser.py',147),
  ('conditional_term -> conditional_term AND conditional_factor','conditional_term',3,'p_conditional_term','dbms_parser.py',148),
  ('conditional_factor -> conditional_primary','conditional_factor',1,'p_conditional_factor','dbms_parser.py',156),
  ('conditional_factor -> NOT conditional_primary','conditional_factor',2,'p_conditional_factor','dbms_parser.py',157),
  ('conditional_primary -> comparison','conditional_primary',1,'p_conditional_primary','dbms_parser.py',165),
  ('conditional_primary -> LPAREN conditional_expression RPAREN','conditional_primary',3,'p_conditional_primary','dbms_parser.py',166),
  ('comparison -> cterm EQ cterm','comparison',3,'p_comparison','dbms_parser.py',174),
  ('comparison -> cterm NOTEQ cterm','comparison',3,'p_comparison','dbms_parser.py',175),
  ('comparison -> cterm LT cterm','comparison',3,'p_comparison','dbms_parser.py',176),
  ('comparison -> cterm GT cterm','comparison',3,'p_comparison','dbms_parser.py',177),
  ('comparison -> cterm LTEQ cterm','comparison',3,'p_comparison','dbms_parser.py',178),
  ('comparison -> cterm GTEQ cterm','comparison',3,'p_comparison','dbms_parser.py',179),
  ('comparison -> cterm LIKE STRING_LITERAL','comparison',3,'p_comparison','dbms_parser.py',180),
  ('comparison -> cterm CLIKE STRING_LITERAL','comparison',3,'p_comparison','dbms_parser.py',181),
  ('comparison -> cterm IS NULL','comparison',3,'p_comparison','dbms_parser.py',182),
  ('comparison -> cterm IS NOT NULL','comparison',4,'p_comparison','dbms_parser.py',183),
  ('cterm -> column','cterm',1,'p_cterm','dbms_parser.py',208),
  ('cterm -> INTEGER_LITERAL','cterm',1,'p_cterm','dbms_parser.py',209),
  ('cterm -> FLOAT_LITERAL','cterm',1,'p_cterm','dbms_parser.py',210),
  ('cterm -> STRING_LITERAL','cterm',1,'p_cterm','dbms_parser.py',211),
  ('limit -> <empty>','limit',0,'p_limit','dbms_parser.py',219),
  ('limit -> LIMIT INTEGER_LITERAL','limit',2,'p_limit','dbms_parser.py',220),
  ('limit -> LIMIT INTEGER_LITERAL COMMA INTEGER_LITERAL','limit',4,'p_limit','dbms_parser.py',221),
  ('create_stmt -> CREATE TABLE table LPAREN col_def_list RPAREN','create_stmt',6,'p_create_stmt','dbms_parser.py',231),
  ('col_def_list -> col_def','col_def_list',1,'p_col_def_list','dbms_parser.py',236),
  ('col_def_list -> col_def_list COMMA col_def','col_def_list',3,'p_col_def_list','dbms_parser.py',237),
  ('col_def -> column INTEGER col_def_opts','col_def',3,'p_col_def','dbms_parser.py',245),
  ('col_def -> column CHAR LPAREN INTEGER_LITERAL RPAREN col_def_opts','col_def',6,'p_col_def','dbms_parser.py',246),
  ('col_def -> column VARCHAR LPAREN INTEGER_LITERAL RPAREN col_def_opts','col_def',6,'p_col_def','dbms_parser.py',247),
  ('col_def -> column REAL col_def_opts','col_def',3,'p_col_def','dbms_parser.py',248),
  ('col_def_opts -> <empty>','col_def_opts',0,'p_col_def_opts','dbms_parser.py',267),
  ('col_def_opts -> NOT NULL','col_def_opts',2,'p_col_def_opts','dbms_parser.py',268),
  ('col_def_opts -> PRIMARY KEY','col_def_opts',2,'p_col_def_opts','dbms_parser.py',269),
  ('col_def_opts -> NOT NULL PRIMARY KEY','col_def_opts',4,'p_col_def_opts','dbms_parser.py',270),
  ('col_def_opts -> PRIMARY KEY NOT NULL','col_def_opts',4,'p_col_def_opts','dbms_parser.py',271),
  ('insert_stmt -> INSERT INTO table insert_col_clause VALUES LPAREN insert_val_list RPAREN','insert_stmt',8,'p_insert_stmt','dbms_parser.py',285),
  ('insert_col_clause -> <empty>','insert_col_clause',0,'p_insert_col_clause','dbms_parser.py',290),
  ('insert_col_clause -> LPAREN insert_col_list RPAREN','insert_col_clause',3,'p_insert_col_clause','dbms_parser.py',291),
  ('insert_col_list -> column','insert_col_list',1,'p_insert_col_list','dbms_parser.py',299),
  ('insert_col_list -> insert_col_list COMMA column','insert_col_list',3,'p_insert_col_list','dbms_parser.py',300),
  ('insert_val_list -> column_val','insert_val_list',1,'p_insert_val_list','dbms_parser.py',308),
  ('insert_val_list -> insert_val_list COMMA column_val','insert_val_list',3,'p_insert_val_list','dbms_parser.py',309),
  ('delete_stmt -> DELETE FROM table where_clause','delete_stmt',4,'p_delete_stmt','dbms_parser.py',317),
  ('update_stmt -> UPDATE table SET update_list where_clause','update_stmt',5,'p_update_stmt','dbms_parser.py',322),
  ('update_list -> column EQ column_val','update_list',3,'p_update_list','dbms_parser.py',327),
  ('update_list -> update_list COMMA column EQ column_val','update_list',5,'p_update_list','dbms_parser.py',328),
  ('drop_stmt -> DROP TABLE table','drop_stmt',3,'p_drop_stmt','dbms_parser.py',338),
  ('begin_stmt -> BEGIN WORK','begin_stmt',2,'p_begin_stmt','dbms_parser.py',343),
  ('commit_stmt -> COMMIT optional_work','commit_stmt',2,'p_commit_stmt','dbms_parser.py',348),
  ('rollback_stmt -> ROLLBACK optional_work','rollback_stmt',2,'p_rollback_stmt','dbms_parser.py',353),
  ('optional_work -> <empty>','optional_work',0,'p_optional_work','dbms_parser.py',358),
  ('optional_work -> WORK','optional_work',1,'p_optional_work','dbms_parser.py',359),
]
