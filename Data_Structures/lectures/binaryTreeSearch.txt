template <typename T>
void bfs (Node<T> *root) {
	queue<Node<T> *> q;
	q.push(root);
	while !q.empty() {
		auto n = q.front();
		q.pop();
		cout << n-> << " ";
		if (n->left)
			q.push(n->left);
		if (n->right)
			q.push(n->right);
	}
}

template <typename T>
void dfs (Node<T> *root) {
	stack<Node<T> *> s;
	s.push(root);
	while !s.empty() {
		auto n = s.top();
		s.pop();
		cout << n-> << " ";
		if (n->right)
			s.push(n->right);
		if (n->left)
			s.push(n->left);
	}
}

template <typename T>
void dfs_recursive(Node<T> *root) {
	if (root == nullptr) 
		return;

	cout << root ->data << " ";
	if (root->left)
		dfs_recursive(root->left);
	if (root->right)
		dfs_recursive(root->right);
}