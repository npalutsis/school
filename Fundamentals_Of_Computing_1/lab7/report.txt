Author: Nick Palutsis
Class: CSE 20211
Lab 7
Date: October 2, 2015

	This program opens a new window for the user titled “Ferris Wheel.” A white ferris wheel with solid red trapezoidal seats sitting on top of green grass is printed in the window. The ferris wheel spins in a clockwise direction, and the rotation can be sped up by pressing ‘r’ or slowed down by pressing ‘f’. The entire ferris wheel can be shifted to the left with ‘j’, right with ‘l’, upward with ‘I’, and downward with ‘k’. The number of seats, as well as the number of sides of the polygon drawn within the outer circle of the ferris wheel, can be increased by pressing ‘h’, and decreased by pressing ‘g’. The radius of the outer circle can be increased by clicking ‘e’ and decreased by pressing ‘d’, and the size of the seats can be increased by pressing ‘w’ or decreased by pressing ‘s’. The program can be quit at any time by pressing ‘q’. All of these commands are listed on the screen below the ferris wheel in the green region.
	The program works by using gfx_open() to open the window for printing, and then using a while loop to repeat all of the drawing commands while it is true. Gfx_color() is used to set the drawing color for each function. The function polygon() reads in a set radius, the number of sides, the x and y coordinates, and then an angle which rotates the orientation of the shape. In this function, the x and y coordinates are used as the center of the shape, and then polar coordinates are calculated to draw lines to form the polygon. This was used to draw the support structure of the ferris wheel. Gfx_circle() was used to draw the outer and inner circles of the ferris wheel, and gfx_line() was used to draw the radiating spokes of the ferris wheel using the polar coordinates of the seats. The function seat() reads in the polar coordinates for the center of the shape as well as the radius. A filled trapezoid is created by drawing lines repeatedly in a for loop to form a solid square with two solid triangles on either side of it. Grass is created by using the same process for a large rectangle below the ferris wheel, and gfx_text() prints the commands in this area. The ferris wheel is able to rotate by incrementing the value of “startTheta” which is controls the orientation of the shapes being printed. An if statement reads for when gfx_event_waiting() is true. Then gfx_wait() is used to detect the keystroke from the event that took place. ‘q’ breaks from the while loop. ‘f’ and ‘r’ slow down and speed up the rotation of the ferris wheel by increasing and decreasing the value within usleep(). ‘w’ and ‘s’ increase and decrease the size of the seats by changing the radius size; ‘e’ and ‘d’ work the same way except change the value for the radius of the entire ferris wheel. ‘l’, ‘j’, ‘k’, and ‘I’ function as arrow keys to shift the position of the ferris wheel by adjusting the x and y coordinates for the center of the ferris wheel. ‘h’ and ‘g’ adjusts the number of seats by incrementing that variable.
	The program was tested by using every key to the extreme so that the ferris wheel stopped or spun too fast to distinguish; was so small it could barely be seen or was too big to fit on the screen; had no seats or too many seats to count; and moved off the page in every direction. The program worked in every situation, except sometimes it would not work when it was spinning too fast or there were too many seats because it would fail to draw the entire picture. However, this mostly occurred when using the ssh connection so it seemed to be due, in part, to a lag in connection.

