Author: Nick Palutsis
Date: March 5, 2016
CSE 20212
Lab 9 Redo

*CHANGES: Since the original grading, I changed nothing from Part 1 since everything worked fine. I greatly improved Part 2 because it did not even compile before, but now it searches, traverses, and simulates a March Madness tournament. I also updated the rest of the report with more specifics about what changed for Part 2. The main reason I did not complete the entire lab originally mainly was due to a time constraint because of a project due in another class. However, it did become easier after waiting and seeing more examples, especially when I was brushing up again for the final exam.

The program works internally by using binaryTree.h and node.h. node.h holds the information for each node in the binary tree. It holds the data, a string label, as well as pointers to the left and right child nodes. In binaryTree.h there are three functions inOrder(), preorder(), and postOrder() which traverse the binary tree printing out the nodes, each using a different methodology to visit each node. They all use recursive strategies to visit each node. First is a pointer which points to the root node for the binary tree. Find() uses the same methodology as preorder() except that it prints out the label for the node if the value entered matches the data for the current node. findWinner() is a function which uses srand to randomly generates values which then correspond to random nodes to choose. Nodes are selected for a Final Four, and then from those teams a championship game and a winner are decided.

The main file prompts the user for a choice. It asks them what they would like to do: either find a value, traverse the tree, or simulate March Madness using the data.txt file. If they choose to find a value it then prompts them for a value and tells them whether or not it exists in the tree. This was tested successfully by using several different values and it correctly returned whether it existed or not. If they decide to traverse it will print out three lists of nodes based on the method used. If the third option is chosen, it clearly displays who the final four, championship, and winners are. This was tested by ensuring that there were no duplicate teams, and that it chose randomly each time. If the user entered and invalid option an error message is displayed.