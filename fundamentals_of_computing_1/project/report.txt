Authors: Nick Palutsis & Teddy Brombach
Date: December 13, 2015

   In this program, a window opens titled "Star Wars" for the user. A start screen indicating the level as well as some instructions of how to play are displayed. Different key presses result in different settings being changed from the default ones once the game is played. When the user presses 's' the start screen is cleared. An image of the user's ship, the Millenium Falcon, is shown in the middle of the screen, and enemy TIE-Fighters are placed in the corners. The user's ship moves forward on the screen, and the user is able to change the direction of the ship by rotating it clockwise or counter-clockwise by pressing 'j' and 'l'. They can also speed up and slow down by pressing 'i' and 'k'. When the user presses the space bar a laser is emitted from the front of the ship. It continues until it goes off the screen or collides with an enemy ship. If the laser hits an enemy, the enemy ship is destroyed. When all enemy ships are destroyed the user continues to the next level. If the user's ship collides with an enemy ship then a "GAME OVER" screen is shown to the user and the program is set back to level 1. The user also has the ability to fly their ship over the edge of the screen to reappear from the opposite edge.
   
   Internally, the program runs within a while loop until the user presses 'q' to end the program. A struct titled 'ship' was created to store the values of each ship on the screen. It kept track of their position, direction, speed, size, and whether or not they existed on the screen. The Millenium Falcon and the TIE-Fighters each had their own functions to draw them using the gfx4 functions and the XPoint struct. The ships where able to be flown by incrementing the x and y values of their centers based on various polar coordinates. The were able to change directions by incrementing their angle by a set value with each key press from the user. The function atan2() was used in order to calculate the angle which the TIE-Fighters had to turn by in order to follow the user's ship. atan2() was used instead of atan() to avoid restricting the domain from only -pi/2 to pi/2. The function collision() was created to read in two sets of x and y coordinates, each with their own radius. It used the distance formula to see if they collided based on their locations and radii. If there was a collision they returned 1, otherwise it returned 0. This was used to test collisions between the Millenium Falcon and the TIE-Fighters, but also between the TIE-Fighters and the Millenium Falcon's laser. The laser was created by using the Falcon's angle and position to draw a line and increment the distance from which it extended from the ship so that it was animated. The "GAME OVER", "NEXT LEVEL", and "YOU WIN" screens were each created by clearing the screen and using a while loop with a counter so that the screen displayed for only a set amount of time before returning to the start screen. The start screen showed various information to the user by using gfx_text(), and it used gfx_wait() to read in button presses from the user and to use the value read in to change different settings, start the game, or quit the program.

   We tested the program for success by isolating certain variables to see whether they perfomed successfully. We first tested to make sure that the TIE-Fighters followed the Millenium Falcon in every direction possible. We tested to ensure that collisions between the TIE-Fighters and the Millenium Falcon ended the level, displayed the game over screen, and returned to the level 1 start screen. We tested that shooting the laser and hitting a TIE-Fighter resulted in it disappearing from the screen, and we also made sure that the program did not track that fighter's position anymore even though it was not on the screen because this would have resulted in collisions even if no ship was displayed. We checked that killing all of the fighters resulted in moving on to the next level or winning the game and returning to start. Lastly, we checked that pressing '1'-'6' on the start screen changed the corresponding speed or size setting for the Tie-Fighters.
